/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Fractale;

import javax.swing.JFileChooser;

/**
 *
 * @author yohann.lelievre
 */
public class AffichageFractale extends javax.swing.JFrame {

    /**
     * Creates new form AffichageFractale
     */
    public AffichageFractale() {
        initComponents();
        startBase       = 1;
        nomFichier      = "";
        typeFractale    = 1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fichierADNFlChsr = new javax.swing.JFileChooser();
        titreLbl = new javax.swing.JLabel();
        selectionFichierLbl = new javax.swing.JLabel();
        fichierBtn = new javax.swing.JButton();
        fractalePnl = new MyFractalPanel();
        ADNScrlBr = new javax.swing.JScrollBar();
        basesLbl = new javax.swing.JLabel();
        nbBasesLbl = new javax.swing.JLabel();
        nbSequenceLbl = new javax.swing.JLabel();
        nbSequenceTxtFld = new javax.swing.JTextField();
        debutSequenceLbl = new javax.swing.JLabel();
        debutSequenceTxtFld = new javax.swing.JTextField();
        typeFractalLbl = new javax.swing.JLabel();
        typeFractalCmbBx = new javax.swing.JComboBox();

        fichierADNFlChsr.setApproveButtonToolTipText("");
        fichierADNFlChsr.setCurrentDirectory(new java.io.File("C:\\Users\\yohann.lelievre\\Documents\\NetBeansProjects\\Fractale\\FractaleFolies\\genome\\hs_alt_CHM1_1.1_chr14.fa"));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                formFocusLost(evt);
            }
        });

        titreLbl.setFont(new java.awt.Font("Bookman Old Style", 2, 18)); // NOI18N
        titreLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titreLbl.setText("Balade Fractale au coeur de l'ADN");

        selectionFichierLbl.setBackground(new java.awt.Color(255, 255, 255));
        selectionFichierLbl.setText("Sélection du fichier FastA");

        fichierBtn.setText("Fichier ADN");
        fichierBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fichierBtnActionPerformed(evt);
            }
        });

        fractalePnl.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout fractalePnlLayout = new javax.swing.GroupLayout(fractalePnl);
        fractalePnl.setLayout(fractalePnlLayout);
        fractalePnlLayout.setHorizontalGroup(
            fractalePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        fractalePnlLayout.setVerticalGroup(
            fractalePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        ADNScrlBr.setBlockIncrement(1);
        ADNScrlBr.setMaximum(1);
        ADNScrlBr.setMinimum(1);
        ADNScrlBr.setOrientation(javax.swing.JScrollBar.HORIZONTAL);
        ADNScrlBr.setToolTipText("");
        ADNScrlBr.addAdjustmentListener(new java.awt.event.AdjustmentListener() {
            public void adjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {
                ADNScrlBrAdjustmentValueChanged(evt);
            }
        });

        basesLbl.setText("Nombre de bases du fichier ADN:");

        nbBasesLbl.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        nbBasesLbl.setText("0");
        nbBasesLbl.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        nbSequenceLbl.setText("Longueur de la séquence analysée:");

        nbSequenceTxtFld.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        nbSequenceTxtFld.setText("100000");
        nbSequenceTxtFld.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                nbSequenceTxtFldFocusLost(evt);
            }
        });
        nbSequenceTxtFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nbSequenceTxtFldActionPerformed(evt);
            }
        });

        debutSequenceLbl.setText("Début de la séquence analysée:");

        debutSequenceTxtFld.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        debutSequenceTxtFld.setText("1");
        debutSequenceTxtFld.setEnabled(false);
        debutSequenceTxtFld.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                debutSequenceTxtFldFocusLost(evt);
            }
        });
        debutSequenceTxtFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                debutSequenceTxtFldActionPerformed(evt);
            }
        });

        typeFractalLbl.setText("Type de représentation fractale");

        typeFractalCmbBx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Noir et Blanc", "Nuance de Gris", "Couleur" }));
        typeFractalCmbBx.setToolTipText("");
        typeFractalCmbBx.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                typeFractalCmbBxItemStateChanged(evt);
            }
        });
        typeFractalCmbBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeFractalCmbBxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(fractalePnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(fichierBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectionFichierLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nbSequenceLbl)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(basesLbl, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(debutSequenceLbl)
                                        .addComponent(typeFractalLbl)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(nbSequenceTxtFld, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                                        .addComponent(nbBasesLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(debutSequenceTxtFld))
                                    .addComponent(typeFractalCmbBx, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(titreLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ADNScrlBr, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(titreLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fractalePnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fichierBtn)
                            .addComponent(selectionFichierLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(basesLbl)
                            .addComponent(nbBasesLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(nbSequenceLbl)
                            .addComponent(nbSequenceTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(debutSequenceLbl)
                            .addComponent(debutSequenceTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(typeFractalLbl)
                            .addComponent(typeFractalCmbBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ADNScrlBr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void fichierBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fichierBtnActionPerformed
        int o = fichierADNFlChsr.showOpenDialog(this);
        int nbSequence;
        if (o == JFileChooser.APPROVE_OPTION){
            java.io.File f = fichierADNFlChsr.getSelectedFile();
            nomFichier = f.getAbsolutePath();
            selectionFichierLbl.setText(nomFichier);
            nbSequence = Integer.parseInt(nbSequenceTxtFld.getText());
            startBase = 1;
            nbBases = ((MyFractalPanel) fractalePnl).calculFractale(nomFichier, (startBase-1), (startBase+nbSequence-1), typeFractale);
            fractalePnl.repaint();
            nbBasesLbl.setText(""+nbBases);
            ADNScrlBr.setMaximum((nbBases-nbSequence+1));
            ADNScrlBr.setValue(startBase);
            debutSequenceTxtFld.setEnabled(true);
        }
    }//GEN-LAST:event_fichierBtnActionPerformed

    private void nbSequenceTxtFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nbSequenceTxtFldActionPerformed
        try {
            int nbSequence = Integer.parseInt(nbSequenceTxtFld.getText());
            if (!nomFichier.equals("")) {
                if (ADNScrlBr.getValue() > (nbBases-nbSequence+1)){
                    ADNScrlBr.setValue((nbBases-nbSequence+1));
                }
                ADNScrlBr.setMaximum((nbBases-nbSequence+1));
                ((MyFractalPanel) fractalePnl).calculFractale(nomFichier, (startBase-1), (startBase+nbSequence-1), typeFractale);
                fractalePnl.repaint();
            }

        } catch (NumberFormatException e){
            javax.swing.JOptionPane.showMessageDialog(null,"Veuillez saisir un entier.");
            setVisible(true);
            nbSequenceTxtFld.requestFocus();
        }
    }//GEN-LAST:event_nbSequenceTxtFldActionPerformed

    private void formFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusLost
    }//GEN-LAST:event_formFocusLost

    private void debutSequenceTxtFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_debutSequenceTxtFldActionPerformed
        try {
            int test = Integer.parseInt(debutSequenceTxtFld.getText());
            int nbSequence = Integer.parseInt(nbSequenceTxtFld.getText());
            if (test > (nbBases-nbSequence+1)){
                javax.swing.JOptionPane.showMessageDialog(null,"Veuillez saisir un entier positif inférieur ou égal à "+(nbBases-nbSequence+1)+".");
                setVisible(true);
                debutSequenceTxtFld.requestFocus();
            }else{
                startBase = test;
                ADNScrlBr.setValue(startBase);
                if (!nomFichier.equals("")) {
                    ((MyFractalPanel) fractalePnl).calculFractale(nomFichier, (startBase-1), (startBase+nbSequence-1), typeFractale);
                    fractalePnl.repaint();
                }
            }

        } catch (NumberFormatException e){
            javax.swing.JOptionPane.showMessageDialog(null,"Veuillez saisir un entier positif.");
            setVisible(true);
            debutSequenceTxtFld.requestFocus();
        }
    }//GEN-LAST:event_debutSequenceTxtFldActionPerformed

    private void ADNScrlBrAdjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {//GEN-FIRST:event_ADNScrlBrAdjustmentValueChanged
        startBase = ADNScrlBr.getValue();
        debutSequenceTxtFld.setText(""+startBase);
        if (!nomFichier.equals("")) {
            int nbSequence = Integer.parseInt(nbSequenceTxtFld.getText());
            ((MyFractalPanel) fractalePnl).calculFractale(nomFichier, (startBase-1), (startBase+nbSequence-1), typeFractale);
            fractalePnl.repaint();
        }
    }//GEN-LAST:event_ADNScrlBrAdjustmentValueChanged

    private void nbSequenceTxtFldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nbSequenceTxtFldFocusLost
        try {
            int nbSequence = Integer.parseInt(nbSequenceTxtFld.getText());
            if (!nomFichier.equals("")) {
                if (ADNScrlBr.getValue() > (nbBases-nbSequence+1)){
                    ADNScrlBr.setValue((nbBases-nbSequence+1));
                }
                ADNScrlBr.setMaximum((nbBases-nbSequence+1));
                ((MyFractalPanel) fractalePnl).calculFractale(nomFichier, (startBase-1), (startBase+nbSequence-1), typeFractale);
                fractalePnl.repaint();
            }

        } catch (NumberFormatException e){
            javax.swing.JOptionPane.showMessageDialog(null,"Veuillez saisir un entier.");
            setVisible(true);
            nbSequenceTxtFld.requestFocus();
        }
    }//GEN-LAST:event_nbSequenceTxtFldFocusLost

    private void debutSequenceTxtFldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_debutSequenceTxtFldFocusLost
        try {
            int test = Integer.parseInt(debutSequenceTxtFld.getText());
            int nbSequence = Integer.parseInt(nbSequenceTxtFld.getText());
            if (test > (nbBases-nbSequence+1)){
                javax.swing.JOptionPane.showMessageDialog(null,"Veuillez saisir un entier positif inférieur ou égal à "+(nbBases-nbSequence+1)+".");
                setVisible(true);
                debutSequenceTxtFld.requestFocus();
            }else{
                startBase = test;
                ADNScrlBr.setValue(startBase);
                if (!nomFichier.equals("")) {
                    ((MyFractalPanel) fractalePnl).calculFractale(nomFichier, (startBase-1), (startBase+nbSequence-1), typeFractale);
                    fractalePnl.repaint();
                }
            }

        } catch (NumberFormatException e){
            javax.swing.JOptionPane.showMessageDialog(null,"Veuillez saisir un entier positif.");
            setVisible(true);
            debutSequenceTxtFld.requestFocus();
        }
    }//GEN-LAST:event_debutSequenceTxtFldFocusLost

    private void typeFractalCmbBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeFractalCmbBxActionPerformed
        int nbSequence = Integer.parseInt(nbSequenceTxtFld.getText());
        
        typeFractale = typeFractalCmbBx.getSelectedIndex() + 1;
        if (!nomFichier.equals("")) {
            ((MyFractalPanel) fractalePnl).calculFractale(nomFichier, (startBase-1), (startBase+nbSequence-1), typeFractale);
            fractalePnl.repaint();
        }
    }//GEN-LAST:event_typeFractalCmbBxActionPerformed

    private void typeFractalCmbBxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_typeFractalCmbBxItemStateChanged
        int nbSequence = Integer.parseInt(nbSequenceTxtFld.getText());
        
        typeFractale = typeFractalCmbBx.getSelectedIndex() + 1;
        if (!nomFichier.equals("")) {
            ((MyFractalPanel) fractalePnl).calculFractale(nomFichier, (startBase-1), (startBase+nbSequence-1), typeFractale);
            fractalePnl.repaint();
        }
    }//GEN-LAST:event_typeFractalCmbBxItemStateChanged

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AffichageFractale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AffichageFractale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AffichageFractale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AffichageFractale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AffichageFractale().setVisible(true);
            }
        });
    }
    
    private String nomFichier;
    private int startBase;
    private int nbBases;
    private int typeFractale;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollBar ADNScrlBr;
    private javax.swing.JLabel basesLbl;
    private javax.swing.JLabel debutSequenceLbl;
    private javax.swing.JTextField debutSequenceTxtFld;
    private javax.swing.JFileChooser fichierADNFlChsr;
    private javax.swing.JButton fichierBtn;
    private javax.swing.JPanel fractalePnl;
    private javax.swing.JLabel nbBasesLbl;
    private javax.swing.JLabel nbSequenceLbl;
    private javax.swing.JTextField nbSequenceTxtFld;
    private javax.swing.JLabel selectionFichierLbl;
    private javax.swing.JLabel titreLbl;
    private javax.swing.JComboBox typeFractalCmbBx;
    private javax.swing.JLabel typeFractalLbl;
    // End of variables declaration//GEN-END:variables
}
